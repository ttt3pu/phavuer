!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("Vue")):"function"==typeof define&&define.amd?define(["Vue"],t):"object"==typeof exports?exports.Phavuer=t(require("Vue")):e.Phavuer=t(e.Vue)}(this,(e=>(()=>{"use strict";var t={744:(e,t)=>{t.Z=(e,t)=>{const i=e.__vccOpts||e;for(const[e,r]of t)i[e]=r;return i}},740:t=>{t.exports=e}},i={};function r(e){var n=i[e];if(void 0!==n)return n.exports;var o=i[e]={exports:{}};return t[e](o,o.exports,r),o.exports}r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{r.r(n),r.d(n,{Body:()=>ee,Circle:()=>k,Container:()=>w,Game:()=>m,Image:()=>R,InjectionKeys:()=>re,Light:()=>q,Line:()=>F,NineSlice:()=>Z,Polygon:()=>_,Rectangle:()=>C,RoundRectangle:()=>Y,Scene:()=>y,Sprite:()=>H,StaticBody:()=>J,Text:()=>V,TilemapLayer:()=>$,Triangle:()=>X,Zone:()=>L,createPhavuerApp:()=>te,initGameObject:()=>ie,onPostUpdate:()=>he,onPreUpdate:()=>ce,refObj:()=>le,refScene:()=>de,refTo:()=>ae,useGame:()=>oe,useScene:()=>se});var e=r(740);const t=[{attr:"onPointerdown",emit:"pointerdown",eventIndex:3},{attr:"onPointermove",emit:"pointermove",eventIndex:3},{attr:"onPointerup",emit:"pointerup",eventIndex:3},{attr:"onPointerout",emit:"pointerout",eventIndex:1},{attr:"onPointerover",emit:"pointerover",eventIndex:3},{attr:"onWheel",emit:"wheel",eventIndex:4},{attr:"onDragstart",emit:"dragstart",drag:!0},{attr:"onDrag",emit:"drag",drag:!0},{attr:"onDragend",emit:"dragend",drag:!0},{attr:"onDragenter",emit:"dragenter",drag:!0},{attr:"onDragover",emit:"dragover",drag:!0},{attr:"onDragleave",emit:"dragleave",drag:!0},{attr:"onDrop",emit:"drop",drag:!0}],i=e=>{e.updateDisplayOrigin&&e.updateDisplayOrigin(),e.input?e.input.hitArea.setSize(e.width,e.height):e._events&&t.some((t=>t.emit in e._events))&&e.setInteractive()},o=(e,t,i)=>{let r=e[t];return Object.defineProperty(e,t,{get:()=>r,set(e){r!==e&&i(`update:${t}`,e)}}),e=>r=e},s=["tween","tweens","timeline","style"],a=["x","y","tweens","tween","timeline"],l={active:e=>t=>e.setActive(t),visible:e=>t=>e.setVisible(t),x:(e,t)=>t?o(e,"x",t):t=>e.x=t,y:(e,t)=>t?o(e,"y",t):t=>e.y=t,x1:e=>t=>e.geom.x1=t,y1:e=>t=>e.geom.y1=t,x2:e=>t=>e.geom.x2=t,y2:e=>t=>e.geom.y2=t,x3:e=>t=>e.geom.x3=t,y3:e=>t=>e.geom.y3=t,points:e=>t=>e.setTo(t),rotation:e=>t=>e.setRotation(t),origin:e=>t=>e.setOrigin(t,t),originX:e=>t=>e.setOrigin(t,e.originY),originY:e=>t=>e.setOrigin(e.originX,t),scale:e=>t=>e.setScale(t,t),scaleX:e=>t=>e.setScale(t,e.scaleY),scaleY:e=>t=>e.setScale(e.scaleX,t),width:e=>t=>{e.setSize(t,e.height),i(e)},height:e=>t=>{e.setSize(e.width,t),i(e)},leftWidth:e=>t=>e.setSlices(e.width,e.height,t,e.rightWidth,e.topHeight,e.bottomHeight),rightWidth:e=>t=>e.setSlices(e.width,e.height,e.leftWidth,t,e.topHeight,e.bottomHeight),topHeight:e=>t=>e.setSlices(e.width,e.height,e.leftWidth,e.rightWidth,t,e.bottomHeight),bottomHeight:e=>t=>e.setSlices(e.width,e.height,e.leftWidth,e.rightWidth,e.topHeight,t),radius:e=>t=>e.setRadius(t),displayWidth:e=>t=>e.setDisplaySize(t,e.displayHeight),displayHeight:e=>t=>e.setDisplaySize(e.displayWidth,t),displayOriginX:e=>t=>e.setDisplayOrigin(t,e.displayOriginY),displayOriginY:e=>t=>e.setDisplayOrigin(e.displayOriginX,t),dropZone:e=>t=>{t&&(e.input||e.setInteractive(),e.input.dropZone=t)},flipX:e=>t=>e.setFlipX(t),flipY:e=>t=>e.setFlipY(t),depth:e=>t=>{if(e.setDepth(t),e.parentContainer){const t=e.parentContainer.list.findIndex((t=>t.depth>(e.depth??0)));-1===t?e.parentContainer.bringToTop(e):e.parentContainer.moveTo(e,Math.max(t-1,0))}},alpha:e=>t=>e.setAlpha(t),blendMode:e=>t=>e.setBlendMode(t),pipeline:e=>t=>e.setPipeline(t),intensity:e=>t=>e.setIntensity(t),tint:e=>t=>e.setTint(t),text:e=>t=>e.setText(t),texture:e=>t=>e.setTexture(t,e.frame&&e.frame.name),frame:e=>t=>e.setFrame(t),color:e=>t=>e.setColor(t),fillColor:e=>t=>e.setFillStyle(t,e.fillAlpha),fillAlpha:e=>t=>e.setFillStyle(e.fillColor,t),lineWidth:e=>(t,i)=>{e.setLineWidth?e.setLineWidth(t,i):e.setStrokeStyle(...t?[t,e.strokeColor,e.strokeAlpha]:[])},strokeColor:e=>t=>e.setStrokeStyle(e.lineWidth,t,e.strokeAlpha),strokeAlpha:e=>t=>e.setStrokeStyle(e.lineWidth,e.strokeColor,t),style:e=>t=>e.setStyle(t),lineSpacing:e=>t=>e.setLineSpacing(t),padding:e=>t=>e.setPadding(t),collision:e=>t=>e.setCollision(t),collisionByProperty:e=>t=>e.setCollisionByProperty(t),play:e=>t=>t?e.play(t):e.stop(),scrollFactor:e=>t=>e.setScrollFactor(t),scrollFactorX:e=>t=>e.setScrollFactor(t,e.scrollFactorY),scrollFactorY:e=>t=>e.setScrollFactor(e.scrollFactorX,t),cullPadding:e=>t=>e.setCullPadding(t,t),cullPaddingX:e=>t=>e.setCullPadding(t,e.cullPaddingY),cullPaddingY:e=>t=>e.setCullPadding(e.cullPaddingX,t),enable:e=>t=>e.enable=t,immovable:e=>t=>e.setImmovable(t),moves:e=>t=>e.moves=t,bounceX:e=>t=>e.setBounceX(t),bounceY:e=>t=>e.setBounceY(t),drag:e=>t=>e.setDrag(t),dragX:e=>t=>e.setDragX(t),dragY:e=>t=>e.setDragY(t),gravityX:e=>t=>e.setGravityX(t),gravityY:e=>t=>e.setGravityY(t),frictionX:e=>t=>e.setFrictionX(t),frictionY:e=>t=>e.setFrictionY(t),velocityX:e=>t=>e.setVelocityX(t),velocityY:e=>t=>e.setVelocityY(t),maxVelocityX:e=>t=>e.setMaxVelocityX(t),maxVelocityY:e=>t=>e.setMaxVelocityY(t),accelerationX:e=>t=>e.setAccelerationX(t),accelerationY:e=>t=>e.setAccelerationY(t),offsetX:e=>t=>e.setOffset(t,e.offset.y),offsetY:e=>t=>e.setOffset(e.offset.x,t),collideWorldBounds:e=>t=>e.collideWorldBounds=t,tween:(e,t)=>d((i=>{const r=e.scene.add.tween(Object.assign({targets:e},i));return t&&r.on("complete",(()=>t("update:tween",void 0))),r})),tweens:(e,t)=>d((i=>{const r=i.findIndex((e=>-1===e.repeat)),n=i.slice(0,-1===r?void 0:r+1),o=e.scene.add.timeline(n.map(((t,i)=>({at:n.slice(0,i).reduce(((e,t)=>e+(t.duration??1e3)*(t.yoyo?2:1)*((t.repeat??0)+1)),0),tween:Object.assign({targets:e},t)})))).play();return t&&o.on("complete",(()=>t("update:tweens",void 0))),o})),timeline:(e,t)=>d((i=>{const r=e.scene.add.timeline(i.map((t=>{const i=Object.assign({},t);return i.tween&&(i.tween=Object.assign({targets:e},i.tween)),i}))).play();return t&&r.on("complete",(()=>t("update:timeline",void 0))),r}))},d=e=>{let t;return i=>{t&&t.stop(),t=i?e(i):void 0}},p={"data-phavuer-game":""},c={"data-phavuer-canvas":"",ref:"canvasRoot",id:"phavuer-canvas",'"':""},h=(0,e.defineComponent)({emits:["create","ready"],props:{config:{type:Object}},setup(t,i){!1!==t.config?.banner&&console.log("%c %cPhavuer v0.16.2%c https://github.com/laineus/phavuer","background-color: #42b883; padding: 2px 0;","background-color: #213547; padding: 2px 8px; color: white; font-weight: bold;","");const r=(0,e.ref)(!1),n=(0,e.ref)(!1),o=document.createElement("div"),s=new Phaser.Game(Object.assign({parent:o},t.config));return(0,e.provide)(re.Game,s),(0,e.provide)(re.Scene,void 0),(0,e.provide)(re.Container,void 0),s.events.addListener("ready",(()=>{n.value=!0,i.emit("ready",s)})),i.emit("create",s),(0,e.onMounted)((()=>{o.firstChild&&(r.value.appendChild(o.firstChild),s.scale.getParent({...t.config,parent:"phavuer-canvas"}))})),{canvasRoot:r,show:n}}});var u=r(744);const m=(0,u.Z)(h,[["render",function(t,i,r,n,o,s){return(0,e.openBlock)(),(0,e.createElementBlock)("div",p,[(0,e.createElementVNode)("div",c,null,512),t.show?(0,e.renderSlot)(t.$slots,"default",{key:0}):(0,e.createCommentVNode)("v-if",!0)])}]]),g=(0,e.defineComponent)({emits:["init","create","update","preload"],props:{name:{type:String,required:!0},autoStart:{type:Boolean,default:!0}},setup(t,i){const r=(0,e.ref)(!1),n=[],o=[],s=class extends Phaser.Scene{init(e){i.emit("init",this,e)}create(e){r.value=!0,i.emit("create",this,e)}update(e,t){n.forEach((i=>i(e,t))),i.emit("update",this,e,t),o.forEach((i=>i(e,t)))}preload(){i.emit("preload",this)}},a=(0,e.inject)(re.Game).scene.add(t.name,s,t.autoStart);return a.events.on("shutdown",(()=>r.value=!1)),(0,e.provide)(re.Scene,a),(0,e.provide)(re.PreUpdateEvents,n),(0,e.provide)(re.PostUpdateEvents,o),{scene:a,show:r}}}),y=(0,u.Z)(g,[["render",function(t,i,r,n,o,s){return t.show?(0,e.renderSlot)(t.$slots,"default",{key:0}):(0,e.createCommentVNode)("v-if",!0)}]]),f={active:{type:Boolean},visible:{type:Boolean},x:{type:Number},y:{type:Number},x1:{type:Number},y1:{type:Number},x2:{type:Number},y2:{type:Number},x3:{type:Number},y3:{type:Number},points:{type:Array},rotation:{type:Number},origin:{type:Number},originX:{type:Number},originY:{type:Number},scale:{type:Number},scaleX:{type:Number},scaleY:{type:Number},width:{type:Number},height:{type:Number},leftWidth:{type:Number},rightWidth:{type:Number},topHeight:{type:Number},bottomHeight:{type:Number},radius:{type:Number},displayWidth:{type:Number},displayHeight:{type:Number},displayOriginX:{type:Number},displayOriginY:{type:Number},dropZone:{type:Boolean},flipX:{type:Boolean},flipY:{type:Boolean},depth:{type:Number},alpha:{type:Number},blendMode:{type:[Number,String]},pipeline:{type:[String,Object]},intensity:{type:Number},tint:{type:Number},text:{type:[String,Number]},texture:{type:String},frame:{type:[Number,String]},color:{type:String},fillColor:{type:Number},fillAlpha:{type:Number},lineWidth:{type:Number},strokeColor:{type:Number},strokeAlpha:{type:Number},style:{type:Object},lineSpacing:{type:Number},padding:{type:[Number,Object]},collision:{type:[Number,Array]},collisionByProperty:{type:Object},play:{type:[String,Object]},scrollFactor:{type:Number},scrollFactorX:{type:Number},scrollFactorY:{type:Number},enable:{type:Boolean},immovable:{type:Boolean},moves:{type:Boolean},bounceX:{type:Number},bounceY:{type:Number},drag:{type:Number},dragX:{type:Number},dragY:{type:Number},gravityX:{type:Number},gravityY:{type:Number},frictionX:{type:Number},frictionY:{type:Number},velocityX:{type:Number},velocityY:{type:Number},maxVelocityX:{type:Number},maxVelocityY:{type:Number},accelerationX:{type:Number},accelerationY:{type:Number},offsetX:{type:Number},offsetY:{type:Number},collideWorldBounds:{type:Boolean},tween:{type:Object},tweens:{type:Array},timeline:{type:Object}},b=Object.entries(f),v=(...e)=>{const t=new Set(e);return Object.fromEntries(b.filter((([e])=>t.has(e))))},S=v("tween","tweens","timeline","active","visible","x","y","rotation","origin","originX","originY","displayOriginX","displayOriginY","scale","scaleX","scaleY","displayWidth","displayHeight","scrollFactor","scrollFactorX","scrollFactorY","dropZone","depth","alpha","blendMode","pipeline"),j=["create",...t.map((e=>e.emit)),...a.map((e=>`update:${e}`))],x=(0,e.defineComponent)({emits:[...j],props:Object.fromEntries(Object.entries(S).filter((([e])=>!["origin","originX","originY","displayOriginX","displayOriginY"].includes(e)))),setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Container(r,t.x||0,t.y||0);return ie(n,t,i),(0,e.provide)(re.Container,n),(0,e.provide)(re.GameObject,n),{object:n}}}),w=(0,u.Z)(x,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),O=(0,e.defineComponent)({emits:[...j],props:{...S,...v("width","height","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Rectangle(r,t.x||0,t.y||0,t.width,t.height);return ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),C=(0,u.Z)(O,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),N=(0,e.defineComponent)({emits:[...j],props:{...S,...v("width","height","radius","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const r=(0,e.inject)(re.Scene);class n extends Phaser.GameObjects.Graphics{constructor(e,t,i,r,n,o){super(e,t,i,r,n),this._originX=0,this._originY=0,this._width=r||0,this._height=n||0,this._radius=o||0,this._fillColor=null,this._fillAlpha=1,this._lineWidth=0,this._strokeColor=null,this._strokeAlpha=1,this.setRenderFlag(!0)}preUpdate(...e){this.renderFlag&&this.render()}setRenderFlag(e){this.renderFlag=e}render(){this.setRenderFlag(!1);const e=this.originX*-this.width,t=this.originY*-this.height,i="number"==typeof this.radius?Math.min(this.radius,this.width/2,this.height/2):this.radius;this.clear(),null!==this.fillColor&&(this.fillStyle(this.fillColor,this.fillAlpha),this.fillRoundedRect(e,t,this.width,this.height,i)),this.lineWidth&&null!==this.strokeColor&&(this.lineStyle(this.lineWidth,this.strokeColor,this.strokeAlpha),this.strokeRoundedRect(e,t,this.width,this.height,i))}get originX(){return this._originX}set originX(e){this._originX=e,this.displayOriginX=this.width*e,this.setRenderFlag(!0)}get originY(){return this._originY}set originY(e){this._originY=e,this.displayOriginY=this.height*e,this.setRenderFlag(!0)}setOrigin(e,t){return this.originX=e,this.originY=void 0===t?e:t,this}get radius(){return this._radius}set radius(e){this._radius=e,this.setRenderFlag(!0)}setRadius(e){return this.radius=e,this}get width(){return this._width}set width(e){this._width=e,this.fixSize(),this.setRenderFlag(!0)}get height(){return this._height}set height(e){this._height=e,this.fixSize(),this.setRenderFlag(!0)}setSize(e,t){return void 0!==e&&(this.width=e),void 0!==t&&(this.height=t),this}fixSize(){this.input&&this.input.hitArea.setSize(this.width,this.height),this.body&&this.body.setSize(this.width,this.height)}get displayWidth(){return Math.abs(this.scaleX*this.width)}set displayWidth(e){this.scaleX=e/this.width}get displayHeight(){return Math.abs(this.scaleY*this.height)}set displayHeight(e){this.scaleY=e/this.height}get fillColor(){return this._fillColor}set fillColor(e){this._fillColor=e,this.setRenderFlag(!0)}get fillAlpha(){return this._fillAlpha}set fillAlpha(e){this._fillAlpha=e,this.setRenderFlag(!0)}setFillStyle(e,t){return void 0!==e&&(this.fillColor=e),void 0!==t&&(this.fillAlpha=t),this}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this.setRenderFlag(!0)}get strokeColor(){return this._strokeColor}set strokeColor(e){this._strokeColor=e,this.setRenderFlag(!0)}get strokeAlpha(){return this._strokeAlpha}set strokeAlpha(e){this._strokeAlpha=e,this.setRenderFlag(!0)}setStrokeStyle(e,t,i){return void 0!==e&&(this.lineWidth=e),void 0!==t&&(this.strokeColor=t),void 0!==i&&(this.strokeAlpha=i),this}}const o=new n(r,t.x||0,t.y||0,t.width,t.height,t.radius);return ie(o,t,i),(0,e.provide)(re.GameObject,o),{object:o}}}),Y=(0,u.Z)(N,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),P=(0,e.defineComponent)({emits:[...j],props:{...S,...v("x1","y1","x2","y2","x3","y3","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Triangle(r,t.x||0,t.y||0,t.x1,t.y1,t.x2,t.y2,t.x3,t.y3);return ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),X=(0,u.Z)(P,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),A=(0,e.defineComponent)({emits:[...j],props:{...S,...v("radius","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Arc(r,t.x||0,t.y||0,t.radius);return ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),k=(0,u.Z)(A,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),W=(0,e.defineComponent)({emits:[...j],props:{...S,...v("points","fillColor","fillAlpha","lineWidth","strokeColor","strokeAlpha","points")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Polygon(r,t.x||0,t.y||0,t.points);return ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),_=(0,u.Z)(W,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),G=(0,e.defineComponent)({emits:[...j],props:{...S,...v("x1","y1","x2","y2","lineWidth","strokeColor","strokeAlpha")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Line(r,t.x||0,t.y||0,t.x1,t.y1,t.x2,t.y2);return ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),F=(0,u.Z)(G,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),B=(0,e.defineComponent)({emits:[...j],props:{...S,...v("texture","frame","tint","flipX","flipY")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Image(r,t.x||0,t.y||0,t.texture);return ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),R=(0,u.Z)(B,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),I=(0,e.defineComponent)({emits:[...j],props:{...S,...v("width","height","leftWidth","rightWidth","topHeight","bottomHeight","texture","frame","tint")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.NineSlice(r,t.x||0,t.y||0,t.texture,t.frame,t.width,t.height,t.leftWidth,t.rightWidth,t.topHeight,t.bottomHeight);return ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),Z=(0,u.Z)(I,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),E=[{attr:"onAnimationstart",emit:"animationstart"},{attr:"onAnimationupdate",emit:"animationupdate"},{attr:"onAnimationrepeat",emit:"animationrepeat"},{attr:"onAnimationcomplete",emit:"animationcomplete"},{attr:"onAnimationstop",emit:"animationstop"},{attr:"onAnimationrestart",emit:"animationrestart"}],D=(0,e.defineComponent)({emits:[...j,...E.map((e=>e.emit))],props:{...S,...v("texture","frame","tint","flipX","flipY"),play:{type:[String,Object]}},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Sprite(r,t.x||0,t.y||0,t.texture),o=(0,e.getCurrentInstance)().vnode.props||[];return E.filter((e=>e.attr in o)).forEach((e=>{n.on(e.emit,((...t)=>{i.emit(e.emit,...t)}))})),ie(n,t,i),(0,e.provide)(re.GameObject,n),{object:n}}}),H=(0,u.Z)(D,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),T=(0,e.defineComponent)({emits:[...j],props:{...S,...v("text","style","lineSpacing","padding")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Text(r,t.x||0,t.y||0,t.text);return ie(n,t,i),{object:n}}}),V=(0,u.Z)(T,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),U=(0,e.defineComponent)({emits:["create"],props:{...S,...v("width","height","collision","collisionByProperty"),tilemap:{type:Object},layerIndex:{type:Number},tileset:{type:[Array,String]},cullPadding:{type:Number},cullPaddingX:{type:Number},cullPaddingY:{type:Number}},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.Tilemaps.TilemapLayer(r,t.tilemap,t.layerIndex,t.tileset,t.x||0,t.y||0);return ie(n,t,i),{object:n}}}),$=(0,u.Z)(U,[["render",function(t,i,r,n,o,s){return(0,e.renderSlot)(t.$slots,"default")}]]),M=(0,e.defineComponent)({emits:[...j],props:{...Object.fromEntries(Object.entries(S).filter((([e])=>!["alpha","blendMode","pipeline"].includes(e)))),...v("width","height")},setup(t,i){const r=(0,e.inject)(re.Scene),n=new Phaser.GameObjects.Zone(r,t.x||0,t.y||0,t.width,t.height);return ie(n,t,i),{object:n}}}),L=(0,u.Z)(M,[["render",function(e,t,i,r,n,o){return null}]]),z=(0,e.defineComponent)({emits:["create"],props:{...v("tween","tweens","timeline","visible","x","y","radius","color","intensity")},setup(e,t){const i=new Phaser.GameObjects.Light(e.x||0,e.y||0);return ie(i,e,t),{object:i}}}),q=(0,u.Z)(z,[["render",function(e,t,i,r,n,o){return null}]]),K=(0,e.defineComponent)({emits:["create"],props:{...v("width","height","offsetX","offsetY","enable")},setup(t,i){const r=(0,e.inject)(re.Scene);if(!r.physics)throw Error("Physics is not available. Add physics setting to your game config. e.g. `physics: { default: 'arcade' }`");const n=(0,e.inject)(re.GameObject),o=r.physics.add.existing(n,Phaser.Physics.Arcade.STATIC_BODY).body;ie(o,t,i)}}),J=(0,u.Z)(K,[["render",function(e,t,i,r,n,o){return null}]]),Q=(0,e.defineComponent)({emits:["create"],props:{...v("width","height","offsetX","offsetY","enable","immovable","moves","bounceX","bounceY","drag","dragX","dragY","gravityX","gravityY","frictionX","frictionY","velocityX","velocityY","maxVelocityX","maxVelocityY","accelerationX","accelerationY","collideWorldBounds")},setup(t,i){const r=(0,e.inject)(re.Scene);if(!r.physics)throw Error("Physics is not available. Add physics setting to your game config. e.g. `physics: { default: 'arcade' }`");const n=(0,e.inject)(re.GameObject),o=r.physics.add.existing(n,Phaser.Physics.Arcade.DYNAMIC_BODY).body;ie(o,t,i)}}),ee=(0,u.Z)(Q,[["render",function(e,t,i,r,n,o){return null}]]),te=()=>{console.error("Phavuer::createPhavuerApp() has been removed. Please use `<Game>` component instead. See: https://github.com/laineus/phavuer")},ie=(i,r,n)=>{const o=(0,e.getCurrentInstance)(),d="bounce"in i,p=i.constructor===Phaser.GameObjects.Light,c=(0,e.inject)(re.Scene);if(p)c.lights.active||c.lights.enable(),c.lights.lights.push(i);else if(d);else{c.add.existing(i);const t=(0,e.inject)(re.Container);if(t){const e=t.list.findIndex((e=>e.depth>(r.depth??0)));-1===e?t.add(i):t.addAt(i,e)}}const h=Object.fromEntries(Object.entries(o.vnode.props??{}).map((([e,t])=>{return[(i=e,i.replace(/-./g,(e=>e[1].toUpperCase()))),t];var i}))),u=Object.keys(h).filter((e=>e.startsWith("onUpdate:"))).map((e=>e.split(":")[1])).filter((e=>a.includes(e))),m=Object.entries(h).filter((([e])=>l[e])).map((([t,o])=>{const a=l[t](i,u.includes(t)?n.emit:void 0);return a(o),(0,e.watch)((()=>r[t]),a,{deep:s.includes(t)})})).filter(Boolean);h.onCreate&&n.emit("create",i);const g=t.filter((e=>e.attr in h));return g.length&&(i.input||i.setInteractive(),g.some((e=>e.drag))&&c.input.setDraggable(i),g.forEach((e=>{i.on(e.emit,((...t)=>{"eventIndex"in e&&(t[0].stopPropagation=t[e.eventIndex].stopPropagation),n.emit(e.emit,...t)}))}))),(0,e.onBeforeUnmount)((()=>{i.tween&&i.tween.stop(),m.forEach((e=>e()))})),p?(0,e.onBeforeUnmount)((()=>c.lights.removeLight(i))):(0,e.onBeforeUnmount)((()=>i.destroy())),i},re={Game:"phavuer_game",Scene:"phavuer_scene",GameObject:"phavuer_gameObject",Container:"phavuer_container",PreUpdateEvents:"phavuer_preUpdateEvents",PostUpdateEvents:"phavuer_postUpdateEvents"},ne=t=>()=>{const i=(0,e.inject)(t);if(!i)throw new Error(`${t} is not provided`);return i},oe=ne(re.Game),se=ne(re.Scene),ae=(t,i)=>(0,e.customRef)(((e,r)=>({get:()=>(e(),t),set(e){t&&e||(t=e?e[i]:null,r())}}))),le=e=>ae(e,"object"),de=e=>ae(e,"scene"),pe=t=>i=>{const r=(0,e.inject)(t);r.push(i),(0,e.onBeforeUnmount)((()=>{const e=r.findIndex((e=>e===i));r.splice(e,1)}))},ce=pe(re.PreUpdateEvents),he=pe(re.PostUpdateEvents)})(),n})()));